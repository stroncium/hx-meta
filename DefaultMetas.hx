import Meta;
class DefaultMetas{
  public static var ARRAY:Array<MetaDesc> = [
    new MetaDesc(":abstract", "Sets the underlying class implementation as 'abstract'", Meta.U_CLASS, null, Meta.P_JAVA|Meta.P_CS),
    new MetaDesc(":access", "Forces private access to package, type or field", Meta.U_CLASS|Meta.U_CLASS_FIELD, [{desc:"Target path", type:MExpr}]),
    new MetaDesc(":allow", "Allows private access from package, type or field", Meta.U_CLASS|Meta.U_CLASS_FIELD, [{desc:"Target path", type:MExpr}]),
    new MetaDesc(":annotation", "Annotation (@interface) definitions on -java-lib imports will be annotated with this metadata. Has no effect on types compiled by Haxe", Meta.U_CLASS, null, Meta.P_JAVA),
    new MetaDesc(":arrayAccess", "Allows [] access on an abstract", Meta.U_ABSTRACT|Meta.U_ABSTRACT_FIELD),
    new MetaDesc(":autoBuild", "Extends @:build metadata to all extending and implementing classes", Meta.U_CLASS, [{desc:"Build macro call", type:MExpr}]),
    new MetaDesc(":bind", "Override Swf class declaration", Meta.U_CLASS, null, Meta.P_FLASH),
    new MetaDesc(":bitmap", "Embeds given bitmap data into the class (must extend flash.display.BitmapData)", Meta.U_CLASS, [{desc:"Bitmap file path", type:MExpr}], Meta.P_FLASH),
    new MetaDesc(":bridgeProperties", "Creates native property bridges for all Haxe properties in this class.", Meta.U_CLASS, null, Meta.P_CS),
    new MetaDesc(":build", "Builds a class or enum from a macro", Meta.U_CLASS|Meta.U_ENUM, [{desc:"Build macro call", type:MExpr}]),
    new MetaDesc(":buildXml", "", Meta.U_CLASS, null, Meta.P_CPP),
    new MetaDesc(":classCode", "Used to inject platform-native code into a class", Meta.U_CLASS, null, Meta.P_JAVA|Meta.P_CS),
    new MetaDesc(":commutative", "Declares an abstract operator as commutative", Meta.U_ABSTRACT_FIELD),
    new MetaDesc(":compilerGenerated", "Marks a field as generated by the compiler. Shouldn't be used by the end user", Meta.U_CLASS, null, Meta.P_JAVA|Meta.P_CS),
    new MetaDesc(":coreApi", "Identifies this class as a core api class (forces Api check)", Meta.U_CLASS|Meta.U_ENUM|Meta.U_TYPEDEF|Meta.U_ABSTRACT),
    new MetaDesc(":coreType", "Identifies an abstract as core type so that it requires no implementation", Meta.U_ABSTRACT),
    new MetaDesc(":cppFileCode", "", Meta.U_CLASS, null, Meta.P_CPP),
    new MetaDesc(":cppNamespaceCode", "", Meta.U_CLASS, null, Meta.P_CPP),
    new MetaDesc(":dce", "Forces dead code elimination even when not -dce full is specified", Meta.U_CLASS|Meta.U_ENUM),
    new MetaDesc(":debug", "Forces debug information to be generated into the Swf even without -debug", Meta.U_CLASS|Meta.U_CLASS_FIELD, null, Meta.P_FLASH),
    new MetaDesc(":decl", "", Meta.U_CLASS, null, Meta.P_CPP),
    new MetaDesc(":defParam", "?"),
    new MetaDesc(":delegate", "Automatically added by -net-lib on delegates", Meta.U_ABSTRACT, null, Meta.P_CS),
    new MetaDesc(":depend", "", Meta.U_CLASS, null, Meta.P_CPP),
    new MetaDesc(":deprecated", "Automatically added by -java-lib on class fields annotated with @Deprecated annotation. Has no effect on types compiled by Haxe.", Meta.U_CLASS|Meta.U_ENUM|Meta.U_CLASS_FIELD, null, Meta.P_JAVA),
    new MetaDesc(":event", "Automatically added by -net-lib on events. Has no effect on types compiled by Haxe.", Meta.U_CLASS_FIELD, null, Meta.P_CS),
    new MetaDesc(":expose", "Makes the class available on the window object", Meta.U_CLASS, [{desc:"?Name=Class path", type:MExpr}], Meta.P_JS),
    new MetaDesc(":extern", "Marks the field as extern so it is not generated", Meta.U_CLASS_FIELD),
    new MetaDesc(":fakeEnum", "Treat enum as collection of values of the specified type", Meta.U_ENUM, [{desc:"Type name", type:MExpr}]),
    new MetaDesc(":file", "Includes a given binary file into the target Swf and associates it with the class (must extend flash.utils.ByteArray)", Meta.U_CLASS, [{desc:"File path", type:MExpr}], Meta.P_FLASH),
    new MetaDesc(":final", "Prevents a class from being extended", Meta.U_CLASS),
    new MetaDesc(":font", "Embeds the given TrueType font into the class (must extend flash.text.Font)", Meta.U_CLASS, [{desc:"TTF path", type:MExpr},{desc:"Range String", type:MExpr}]),
    new MetaDesc(":forward", "Forwards field access to underlying type", Meta.U_ABSTRACT, [{desc:"List of field names", type:MExpr}]),
    new MetaDesc(":from", "Specifies that the field of the abstract is a cast operation from the type identified in the function", Meta.U_ABSTRACT_FIELD),
    new MetaDesc(":functionCode", "", Meta.U_CLASS, null, Meta.P_CPP),
    new MetaDesc(":functionTailCode", "", Meta.U_CLASS, null, Meta.P_CPP),
    new MetaDesc(":generic", "Marks a class or class field as generic so each type parameter combination generates its own type/field", Meta.U_CLASS|Meta.U_CLASS_FIELD),
    new MetaDesc(":genericBuild", "Builds instances of a type using the specified macro", Meta.U_CLASS),
    new MetaDesc(":getter", "Generates a native getter function on the given field", Meta.U_CLASS_FIELD, [{desc:"Class field name", type:MExpr}], Meta.P_FLASH),
    new MetaDesc(":hack", "Allows extending classes marked as @:final", Meta.U_CLASS),
    new MetaDesc(":headerClassCode", "", Meta.U_CLASS, null, Meta.P_CPP),
    new MetaDesc(":headerCode", "", Meta.U_CLASS, null, Meta.P_CPP),
    new MetaDesc(":headerNamespaceCode", "", Meta.U_CLASS, null, Meta.P_CPP),
    new MetaDesc(":hxGen", "Annotates that an extern class was generated by Haxe", Meta.U_CLASS|Meta.U_ENUM, null, Meta.P_JAVA|Meta.P_CS),
    new MetaDesc(":ifFeature", "Causes a field to be kept by DCE if the given feature is part of the compilation", Meta.U_CLASS_FIELD, [{desc:"Feature name", type:MExpr}]),
    new MetaDesc(":pythonImport", "Generates python import statement for extern classes", Meta.U_CLASS, null, Meta.P_PYTHON),
    new MetaDesc(":include", "", Meta.U_CLASS, null, Meta.P_CPP),
    new MetaDesc(":initPackage", "?"),
    new MetaDesc(":internal", "Generates the annotated field/class with 'internal' access", Meta.U_CLASS|Meta.U_ENUM|Meta.U_CLASS_FIELD, null, Meta.P_JAVA|Meta.P_CS),
    new MetaDesc(":isVar", "Forces a physical field to be generated for properties that otherwise would not require one", Meta.U_CLASS_FIELD),
    new MetaDesc(":jsRequire", "Generate javascript module require expression for given extern", Meta.U_CLASS, null, Meta.P_JS),
    new MetaDesc(":keep", "Causes a field or type to be kept by DCE"),
    new MetaDesc(":keepInit", "Causes a class to be kept by DCE even if all its field are removed", Meta.U_CLASS),
    new MetaDesc(":keepSub", "Extends @:keep metadata to all implementing and extending classes", Meta.U_CLASS),
    new MetaDesc(":multiType", "Specifies that an abstract chooses its this-type from its @:to functions", Meta.U_ABSTRACT, [{desc:"Relevant type parameters", type:MExpr}]),
    new MetaDesc(":native", "Rewrites the path of a class or enum during generation", Meta.U_CLASS|Meta.U_ENUM, [{desc:"Output type path", type:MExpr}]),
    new MetaDesc(":nativeChildren", "Annotates that all children from a type should be treated as if it were an extern definition - platform native", Meta.U_CLASS, null, Meta.P_JAVA|Meta.P_CS),
    new MetaDesc(":nativeGen", "Annotates that a type should be treated as if it were an extern definition - platform native", Meta.U_CLASS|Meta.U_ENUM, null, Meta.P_JAVA|Meta.P_CS|Meta.P_PYTHON),
    new MetaDesc(":noCompletion", "Prevents the compiler from suggesting completion on this field", Meta.U_CLASS_FIELD),
    new MetaDesc(":noDebug", "Does not generate debug information into the Swf even if -debug is set", Meta.U_CLASS|Meta.U_CLASS_FIELD, null, Meta.P_FLASH),
    new MetaDesc(":noDoc", "Prevents a type from being included in documentation generation"),
    new MetaDesc(":noImportGlobal", "Prevents a static field from being imported with import Class.*", Meta.U_ANY_FIELD),
    new MetaDesc(":noPackageRestrict", "?"),
    new MetaDesc(":noStack", "", Meta.U_CLASS, null, Meta.P_CPP),
    new MetaDesc(":notNull", "Declares an abstract type as not accepting null values", Meta.U_ABSTRACT),
    new MetaDesc(":noUsing", "Prevents a field from being used with 'using'", Meta.U_CLASS_FIELD),
    new MetaDesc(":op", "Declares an abstract field as being an operator overload", Meta.U_ABSTRACT_FIELD, [{desc:"The operation", type:MExpr}]),
    new MetaDesc(":optional", "Marks the field of a structure as optional", Meta.U_CLASS_FIELD),
    new MetaDesc(":overload", "Allows the field to be called with different argument types", Meta.U_CLASS_FIELD, [{desc:"Function specification (no expression)", type:MExpr}]),
    new MetaDesc(":public", "Marks a class field as being public", Meta.U_CLASS_FIELD),
    new MetaDesc(":publicFields", "Forces all class fields of inheriting classes to be public", Meta.U_CLASS),
    new MetaDesc(":privateAccess", "Allow private access to anything for the annotated expression", Meta.U_EXPR),
    new MetaDesc(":protected", "Marks a class field as being protected", Meta.U_CLASS_FIELD),
    new MetaDesc(":property", "Marks a property field to be compiled as a native C# property", Meta.U_CLASS_FIELD, null, Meta.P_CS),
    new MetaDesc(":readOnly", "Generates a field with the 'readonly' native keyword", Meta.U_CLASS_FIELD, null, Meta.P_CS),
    new MetaDesc(":remove", "Causes an interface to be removed from all implementing classes before generation", Meta.U_CLASS),
    new MetaDesc(":require", "Allows access to a field only if the specified compiler flag is set", Meta.U_CLASS_FIELD, [{desc:"Compiler flag to check", type:MExpr}]),
    new MetaDesc(":rtti", "Adds runtime type informations", Meta.U_CLASS),
    new MetaDesc(":runtime", "?"),
    new MetaDesc(":runtimeValue", "Marks an abstract as being a runtime value", Meta.U_ABSTRACT),
    new MetaDesc(":setter", "Generates a native getter function on the given field", Meta.U_CLASS_FIELD, [{desc:"Class field name", type:MExpr}], Meta.P_FLASH),
    new MetaDesc(":sound", "Includes a given .wav or .mp3 file into the target Swf and associates it with the class (must extend flash.media.Sound)", Meta.U_CLASS, [{desc:"File path", type:MExpr}], Meta.P_FLASH),
    new MetaDesc(":struct", "Marks a class definition as a struct.", Meta.U_CLASS, null, Meta.P_CS),
    new MetaDesc(":structAccess", "Marks an extern class as using struct access('.') not pointer('->').", Meta.U_CLASS, null, Meta.P_CPP),
    new MetaDesc(":suppressWarnings", "Adds a SuppressWarnings annotation for the generated Java class", Meta.U_CLASS, null, Meta.P_JAVA),
    new MetaDesc(":throws", "Adds a 'throws' declaration to the generated function.", Meta.U_CLASS_FIELD, [{desc:"Type as String", type:MExpr}], Meta.P_JAVA),
    new MetaDesc(":to", "Specifies that the field of the abstract is a cast operation to the type identified in the function", Meta.U_ABSTRACT_FIELD),
    new MetaDesc(":transient", "Adds the 'transient' flag to the class field", Meta.U_CLASS_FIELD, null, Meta.P_JAVA),
    new MetaDesc(":volatile", "", Meta.U_CLASS, null, Meta.P_JAVA|Meta.P_CS),
    new MetaDesc(":unbound", "Compiler internal to denote unbounded global variable"),
    new MetaDesc(":unifyMinDynamic", "Allows a collection of types to unify to Dynamic", Meta.U_CLASS_FIELD),
    new MetaDesc(":unreflective", "", Meta.U_CLASS, null, Meta.P_CPP),
    new MetaDesc(":unsafe", "Declares a class, or a method with the C#'s 'unsafe' flag", Meta.U_CLASS|Meta.U_CLASS_FIELD, null, Meta.P_CS),
    new MetaDesc(":usage", "?"),
    new MetaDesc(":void", "Use Cpp native 'void' return type", Meta.U_CLASS, null, Meta.P_CPP),

    // internals
    //new MetaDesc(":realPath", "Internally used on @:native types to retain original path information"),
    //new MetaDesc(":requiresAssign", "Used internally to mark certain abstract operator overloads"),
    //new MetaDesc(":replaceReflection", "Used internally to specify a function that should replace its internal __hx_functionName counterpart", Meta.U_CLASS|Meta.U_ENUM, null, Meta.P_JAVA|Meta.P_CS),
    //new MetaDesc(":skipCtor", "Used internally to generate a constructor as if it were a native type (no __hx_ctor)", Meta.U_CLASS, null, Meta.P_JAVA|Meta.P_CS),
    //new MetaDesc(":skipReflection", "Used internally to annotate a field that shouldn't have its reflection data generated", Meta.U_CLASS_FIELD, null, Meta.P_JAVA|Meta.P_CS),
    //new MetaDesc(":this", "Internally used to pass a 'this' expression to macros", Meta.U_EXPR),
    //new MetaDesc(":toString", "Internally used"),
    //new MetaDesc(":valueUsed", "Internally used by DCE to mark an abstract value as used"),
    //new MetaDesc(":used", "Internally used by DCE to mark a class or field as used"),
    //new MetaDesc(":accessor", "Used internally by DCE to mark property accessors", Meta.U_CLASS_FIELD),
    //new MetaDesc(":ast", "Internally used to pass the AST source into the typed AST"),
    //new MetaDesc(":class", "Used internally to annotate an enum that will be generated as a class", Meta.U_ENUM, null, Meta.P_JAVA|Meta.P_CS),
    //new MetaDesc(":csNative", "Automatically added by -net-lib on classes generated from .NET DLL files", Meta.U_CLASS|Meta.U_ENUM, null, Meta.P_CS),
    //new MetaDesc(":dynamicObject", "Used internally to identify the Dynamic Object implementation", Meta.U_CLASS, null, Meta.P_JAVA|Meta.P_CS),
    //new MetaDesc(":enum", "Used internally to annotate a class that was generated from an enum", Meta.U_CLASS, null, Meta.P_JAVA|Meta.P_CS),
    //new MetaDesc(":enumConstructorParam", "Used internally to annotate GADT type parameters", Meta.U_CLASS),
    //new MetaDesc(":javaNative", "Automatically added by -java-lib on classes generated from JAR/class files", Meta.U_CLASS|Meta.U_ENUM, null, Meta.P_JAVA),
    //new MetaDesc(":meta", "Internally used to mark a class field as being the metadata field"),
    //new MetaDesc(":macro", "(deprecated)"),
    //new MetaDesc(":maybeUsed", "Internally used by DCE to mark fields that might be kept"),
    //new MetaDesc(":mergeBlock", "Internally used by typer to mark block that should be merged into the outer scope"),
    //new MetaDesc(":nativeGeneric", "Used internally to annotate native generic classes", Meta.U_CLASS|Meta.U_ENUM, null, Meta.P_CS),
    //new MetaDesc(":ns", "Internally used by the Swf generator to handle namespaces", Meta.U_CLASS, null, Meta.P_FLASH),
    //new MetaDesc(":exhaustive", ""),
    //new MetaDesc(":flatEnum", "Internally used to mark an enum as being flat, i.e. having no function constructors", Meta.U_ENUM),
    //new MetaDesc(":haxeGeneric", "Used internally to annotate non-native generic classes", Meta.U_CLASS|Meta.U_ENUM, null, Meta.P_CS),
    //new MetaDesc(":impl", "Used internally to mark abstract implementation fields", Meta.U_ABSTRACT_FIELD),
  ];
}
